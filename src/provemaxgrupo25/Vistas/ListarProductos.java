/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package provemaxgrupo25.Vistas;


import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import provemaxgrupo25.Data.ProductoData;
import provemaxgrupo25.Entidades.Producto;


/**
 *
 * @author HP
 */
public class ListarProductos extends javax.swing.JInternalFrame {


    private DefaultTableModel model;
    private List<Producto> listaP;
    private List<Producto> listaPB;
    private List<Producto> listaTP;
    private ProductoData pd;
    

    public ListarProductos() {
        initComponents();
        pd= new ProductoData();
        model= new DefaultTableModel();
        listaP= pd.ListarProducto();
        listaPB= pd.ObtenerProdBaja();
        listaTP= pd.ObtenerTodosProd();
        editartabla();
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtListarProd = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jrbActivo = new javax.swing.JRadioButton();
        jrbBaja = new javax.swing.JRadioButton();
        jrbTodos = new javax.swing.JRadioButton();
        jbAlta = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Productos"));
        setClosable(true);
        setIconifiable(true);

        jtListarProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jtListarProd);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jrbActivo.setText("Activos");
        jrbActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbActivoActionPerformed(evt);
            }
        });

        jrbBaja.setText("Baja");
        jrbBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbBajaActionPerformed(evt);
            }
        });

        jrbTodos.setText("Todos");
        jrbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbActivo)
                    .addComponent(jrbBaja)
                    .addComponent(jrbTodos))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jrbActivo)
                .addGap(29, 29, 29)
                .addComponent(jrbBaja)
                .addGap(40, 40, 40)
                .addComponent(jrbTodos)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jbAlta.setText("Alta producto");
        jbAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAltaActionPerformed(evt);
            }
        });

        jbAnular.setText("AnularProducto");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jbAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlta)
                    .addComponent(jbAnular))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jrbActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbActivoActionPerformed
       
        try{
             
             
            jrbActivo.setSelected(true);
            jrbBaja.setSelected(false);
            jrbTodos.setSelected(false);
            
            cargarProdActivo();
            
            jbAnular.setEnabled(true);
            jbAlta.setEnabled(false);
           
            
       }catch(NullPointerException e){
           return;
             
       }
                                  
    }//GEN-LAST:event_jrbActivoActionPerformed

    private void jrbBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbBajaActionPerformed
       try{
           
            jrbBaja.setSelected(true);
            jrbTodos.setSelected(false);
            jrbActivo.setSelected(false);
            
            cargarProdBaja();
            
            jbAnular.setEnabled(false);
            jbAlta.setEnabled(true);
            
       }catch(NullPointerException e){
           return;
             
       }
    }//GEN-LAST:event_jrbBajaActionPerformed

    private void jrbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosActionPerformed
         try{
           
           
            jrbTodos.setSelected(true);
            jrbActivo.setSelected(false);
            jrbBaja.setSelected(false);
            
            cargarProducto();
            
            
            jbAnular.setEnabled(false);
            jbAlta.setEnabled(false);
            
       }catch(NullPointerException e){
           return;
       }
    }//GEN-LAST:event_jrbTodosActionPerformed

    private void jbAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAltaActionPerformed
         int filasSelec = jtListarProd.getSelectedRow();
        if(filasSelec !=-1){
           
           int idProducto = (Integer) model.getValueAt(filasSelec, 0); 
           pd.CambiarEstadoProdT(idProducto);
                      
           
            borrarFilaTabla();
            
        }else {
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar una fila de la tabla");
        }
    }//GEN-LAST:event_jbAltaActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
      
        int filaSeleccionada = jtListarProd.getSelectedRow();
    if (filaSeleccionada != -1) {
        int idProducto = (Integer) model.getValueAt(filaSeleccionada, 0);
        pd.CambiarEstadoProducto(idProducto);// Suponiendo que pd es una instancia v√°lida de la clase que contiene el m√©todo EliminarProducto
        borrarFilaTabla(); // Suponiendo que tienes una funci√≥n para borrar la fila en la posici√≥n especificada
    } else {
        JOptionPane.showMessageDialog(this, "Usted debe seleccionar una fila de la tabla");
    }
    }//GEN-LAST:event_jbAnularActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlta;
    private javax.swing.JButton jbAnular;
    private javax.swing.JRadioButton jrbActivo;
    private javax.swing.JRadioButton jrbBaja;
    private javax.swing.JRadioButton jrbTodos;
    private javax.swing.JTable jtListarProd;
    // End of variables declaration//GEN-END:variables
private void editartabla(){
    
    model.addColumn("ID");
    model.addColumn("Nombre");
    model.addColumn("Precio Actual");
    model.addColumn("Stock");
    model.addColumn("Estado");
    jtListarProd.setModel(model); 
}
private void cargarProducto() {
    listaTP= pd.ObtenerTodosProd();
    DefaultTableModel model = (DefaultTableModel) jtListarProd.getModel();
    model.setRowCount(0); // Limpia la tabla antes de cargar nuevos datos

    for (Producto item : listaTP) {
        model.addRow(new Object[]{
            item.getIdProducto(),
            item.getNombreProd(),
            item.getPrecioActual(),
            item.getStock(),
            item.isEstado()
        });
    }
}
    
    private void borrarFilaTabla(){
        int indice= model.getRowCount() -1;
        for (int i= indice; i>=0; i--){
            model.removeRow(i);
        }
    }
    private void cargarProdActivo() {
    listaP = pd.ListarProducto(); // Supongo que este m√©todo devuelve una lista de productos con su estado

    DefaultTableModel model = (DefaultTableModel) jtListarProd.getModel(); // Supongo que 'model' se refiere al modelo de tu tabla

    // Limpia la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    for (Producto p : listaP) {
        if (p.isEstado()== true) { // Verifica si el estado del producto es activo
            model.addRow(new Object[] { p.getIdProducto(), p.getNombreProd(), p.getPrecioActual(), p.getStock(), p.isEstado() });
        }
    }
    }
   private void cargarProdBaja() {
    listaPB = pd.ObtenerProdBaja(); // Supongo que este m√©todo devuelve una lista de productos con estado inactivo (false)

    DefaultTableModel model = (DefaultTableModel) jtListarProd.getModel(); // Supongo que 'model' se refiere al modelo de tu tabla

    // Limpia la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    for (Producto p : listaPB) {
        if (!p.isEstado()) { // Verifica si el estado del producto es inactivo (false)
            model.addRow(new Object[] { p.getIdProducto(), p.getNombreProd(), p.getPrecioActual(), p.getStock(), p.isEstado() });
        }
    }
}

}
    
    



